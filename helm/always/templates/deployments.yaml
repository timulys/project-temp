{{- $ns := .Release.Namespace -}}
{{- range $app := .Values.apps }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $app.name }}
  namespace: {{ $ns }}
  labels:
    app.kubernetes.io/name: {{ $app.name }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
spec:
  replicas: {{ $app.replicaCount | default 3 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $app.name }}
      app.kubernetes.io/instance: {{ $.Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ $app.name }}
        app.kubernetes.io/instance: {{ $.Release.Name }}
    spec:
      {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ $app.name }}
          image: "{{ $.Values.image.registry }}/{{ $app.image.name }}:{{ required (printf "%s image tag missing for %s" $.Chart.Name $app.name) $app.image.tag }}"
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          ports:
            - containerPort: {{ $app.service.port }}
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "{{ $app.env.SPRING_PROFILES_ACTIVE | default "sandbox" }}"
            # 앱이 컨텍스트 패스를 환경변수로 읽을 경우에만 사용
            - name: SERVER_SERVLET_CONTEXT_PATH
              value: "{{ $app.contextPath }}"
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-cred
                  key: rabbitmq-password
            # Redis 접속 (standalone/replication)
            - name: SPRING_REDIS_HOST
              value: "redis-master.redis.svc.cluster.local"
            - name: SPRING_REDIS_PORT
              value: "6379"
            - name: SPRING_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-cred
                  key: redis-password
            # placeholder 에러 방지용 (클러스터 안 쓸 때는 빈 값으로)
            - name: SPRING_REDIS_CLUSTER_NODES
              value: ""
                  
          envFrom:
            # MySQL Secret 주입 없음 (application-sandbox.yml의 고정값 사용)
            {{- if $.Values.secrets.rabbitmq }}
            - secretRef: { name: {{ $.Values.secrets.rabbitmq }} }
            {{- end }}
            {{- if $.Values.secrets.redis }}
            - secretRef: { name: {{ $.Values.secrets.redis }} }
            {{- end }}
          readinessProbe:
            httpGet:
              path: "{{ $app.probes.path }}"
              port: {{ $app.service.port }}
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: "{{ $app.probes.path }}"
              port: {{ $app.service.port }}
            initialDelaySeconds: 15
            periodSeconds: 10
          resources:
            {{- toYaml ($app.resources | default dict) | nindent 12 }}
---
{{- end }}
