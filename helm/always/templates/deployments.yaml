{{- $ns := .Release.Namespace -}}
{{- range $app := .Values.apps }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $app.name }}
  namespace: {{ $ns }}
  labels:
    app.kubernetes.io/name: {{ $app.name }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
spec:
  replicas: {{ $app.replicaCount | default 3 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $app.name }}
      app.kubernetes.io/instance: {{ $.Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ $app.name }}
        app.kubernetes.io/instance: {{ $.Release.Name }}
    spec:
      {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ $app.name }}
          image: "{{ $.Values.image.registry }}/{{ $app.image.name }}:{{ required (printf "%s image tag missing for %s" $.Chart.Name $app.name) $app.image.tag }}"
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          ports:
            - containerPort: {{ $app.service.port }}
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "{{ $app.env.SPRING_PROFILES_ACTIVE | default "sandbox" }}"
            # 앱이 컨텍스트 패스를 환경변수로 읽을 경우에만 사용
            - name: SERVER_SERVLET_CONTEXT_PATH
              value: "{{ $app.contextPath }}"
            - name: SPRING_RABBITMQ_HOST
              value: "rabbitmq.rabbitmq.svc.cluster.local"
            - name: SPRING_RABBITMQ_PORT
              value: "5672"
            - name: SPRING_RABBITMQ_VIRTUAL_HOST
              value: "/"
            - name: SPRING_RABBITMQ_USERNAME
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-cred
                  key: rabbitmq-username   # ← Secret 키 이름 확인 필요(아래 참고)
            - name: SPRING_RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-cred
                  key: rabbitmq-password
            # Redis 접속 (standalone/replication)
            - name: SPRING_REDIS_HOST
              value: "redis-master.redis.svc.cluster.local"
            - name: SPRING_REDIS_PORT
              value: "6379"
            - name: SPRING_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-cred
                  key: redis-password
            # placeholder 에러 방지용 (클러스터 안 쓸 때는 빈 값으로)
            - name: SPRING_REDIS_CLUSTER_NODES
              value: ""
              
            {{- if $app.extraEnv }}
            {{- toYaml $app.extraEnv | nindent 12 }}
            {{- end }}
                  
          # ====== Probes (경로/타이밍 values로 조절) ======
          readinessProbe:
            httpGet:
              path: {{ default "/" $app.probes.path | quote }}
              port: {{ $app.service.port }}
            initialDelaySeconds: {{ default 40 $app.probes.readinessInitialDelay }}
            periodSeconds:       {{ default 10 $app.probes.readinessPeriod }}
            timeoutSeconds:      {{ default 5  $app.probes.readinessTimeout }}
            failureThreshold:    {{ default 6  $app.probes.readinessFailures }}

          livenessProbe:
            httpGet:
              path: {{ default "/" $app.probes.path | quote }}
              port: {{ $app.service.port }}
            initialDelaySeconds: {{ default 120 $app.probes.livenessInitialDelay }}
            periodSeconds:       {{ default 10  $app.probes.livenessPeriod }}
            timeoutSeconds:      {{ default 5   $app.probes.livenessTimeout }}
            failureThreshold:    {{ default 6   $app.probes.livenessFailures }}

          resources:
            {{- toYaml ($app.resources | default dict) | nindent 12 }}
---
{{- end }}
