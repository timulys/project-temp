name: Build & Push portal

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "SPRING_PROFILES_ACTIVE"
        required: true
        default: "sandbox"

env:
  # Docker Hub
  DOCKERHUB_NAMESPACE: timulys # ex) timulys (Repo → Settings → Variables에 등록)
  IMAGE_NAME: portal
  # Dockerfile build-args
  MODULE: portal
  ENVIRONMENT: ${{ github.event.inputs.environment || 'sandbox' }}
  CHART_PATH: ./helm/always   # helm chart 경로
  RELEASE_NAME: always
  NAMESPACE: sbox

jobs:
  build-and-push-portal:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker metadata (tags/labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            docker.io/${{ env.DOCKERHUB_NAMESPACE }}/${{ env.IMAGE_NAME }}
          flavor: latest=false
          tags: |
            type=sha,format=short,prefix=portal-

      - name: Build & Push (portal)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          build-args: |
            MODULE=${{ env.MODULE }}
            ENVIRONMENT=${{ env.ENVIRONMENT }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          sbom: false
          provenance: false

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'v1.30.0'

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: '3.15.0'

      - name: Configure kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG_CONTENTS }}" > ~/.kube/config

      - name: Helm upgrade (update only image tag)
        run: |
          helm upgrade ${{ env.RELEASE_NAME }} ${{ env.CHART_PATH }} \
            --namespace ${{ env.NAMESPACE }} \
            --reuse-values \
            --set apps[0].image.tag=${{ steps.meta.outputs.version }}
