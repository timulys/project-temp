name: Build & Push talk

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "SPRING_PROFILES_ACTIVE"
        required: true
        default: "sandbox"

env:
  # Docker Hub
  DOCKERHUB_NAMESPACE: timulys # ex) timulys (Repo → Settings → Variables에 등록)
  IMAGE_NAME: talk
  # Dockerfile build-args
  MODULE: talk
  ENVIRONMENT: ${{ github.event.inputs.environment || 'sandbox' }}
  VALUES_FILE: helm/always/values.yaml

jobs:
  build-and-push-talk:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker metadata (tags/labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            docker.io/${{ env.DOCKERHUB_NAMESPACE }}/${{ env.IMAGE_NAME }}
          flavor: latest=false
          tags: |
            type=sha,format=short,prefix=portal-

      # 첫 번째 태그에서 ":<tag>"만 추출
      - name: Extract image tag from metadata
        id: tag
        run: |
          FIRST_TAG="$(echo "${{ steps.meta.outputs.tags }}" | head -n1)"
          # 예: FIRST_TAG = docker.io/timulys/platform:platform-abcdef0
          TAG="${FIRST_TAG##*:}"
          echo "tag=$TAG"
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"
          
      - name: Build & Push (talk)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          build-args: |
            MODULE=${{ env.MODULE }}
            ENVIRONMENT=${{ env.ENVIRONMENT }}
            MAVEN_IMAGE=maven:3.9.6-eclipse-temurin-17
            TOMCAT_IMAGE=tomcat:9.0-jdk17-temurin
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          sbom: false
          provenance: false

      - name: Bump image tag in values.yaml
        run: |
          NEW_TAG="${{ steps.tag.outputs.tag }}"  # 예: platform-abcdef0
          yq -i '( .apps[] | select(.name=="platform") ).image.tag = strenv(NEW_TAG)' "${{ env.VALUES_FILE }}"
          echo "New tag set to: ${NEW_TAG}"
          yq '( .apps[] | select(.name=="platform") ).image.tag' "${{ env.VALUES_FILE }}"

      - name: Commit & Push
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add "${{ env.VALUES_FILE }}"
          git commit -m "chore(platform): bump image tag to ${{ steps.tag.outputs.tag }}" || echo "No changes to commit"
          git push
