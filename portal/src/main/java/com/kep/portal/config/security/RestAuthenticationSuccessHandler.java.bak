package com.kep.portal.config.security;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.kep.core.model.dto.ApiResult;
import com.kep.core.model.dto.ApiResultCode;
import com.kep.portal.model.dto.member.AuthMemberDto;
import com.kep.portal.model.security.AuthMember;
import com.kep.portal.model.security.AuthMemberMapper;
import lombok.extern.slf4j.Slf4j;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.security.core.Authentication;
import org.springframework.security.web.authentication.AuthenticationSuccessHandler;
import org.springframework.stereotype.Component;

import javax.annotation.Resource;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.nio.charset.StandardCharsets;

/**
 * 로그인 프로세스 성공시 처리
 */
@Component
@Slf4j
public class RestAuthenticationSuccessHandler implements AuthenticationSuccessHandler {

	@Resource
	private ObjectMapper objectMapper;
	@Resource
	private AuthMemberMapper authMemberMapper;

	@Override
	public void onAuthenticationSuccess(HttpServletRequest request, HttpServletResponse response, Authentication authentication) throws IOException, ServletException {

//		WebAuthenticationDetails web = (WebAuthenticationDetails) authentication.getDetails();
		AuthMember authMember = (AuthMember) authentication.getPrincipal();
		AuthMemberDto authMemberDto = authMemberMapper.map(authMember);

		response.setStatus(HttpStatus.OK.value());
		response.setContentType(MediaType.APPLICATION_JSON_VALUE);
		response.setCharacterEncoding(StandardCharsets.UTF_8.toString());

		for (String key : response.getHeaderNames()) {
			log.info("LOGIN, SUCCESS, RESPONSE HEADER: {}: {}", key, response.getHeader(key));
		}

		ApiResult<AuthMemberDto> result = ApiResult.<AuthMemberDto>builder()
				.code(ApiResultCode.succeed)
				.payload(authMemberDto)
				.build();

		objectMapper.writeValue(response.getWriter(), result);
	}
}
